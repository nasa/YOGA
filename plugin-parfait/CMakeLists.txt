cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
project(plugin-parfait)
set (CMAKE_CXX_STANDARD 14)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_SHARED_LIBRARY_PREFIX "")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/../cmake)
include(one-ring-common)
include(CompilerOptions)

get_compiler_warning_options(compile_warning_options)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${compile_warning_options}")

option(PARFAIT_ENABLE_CGNS "Enables CGNS unstructured file reading support" OFF)
option(PARFAIT_ENABLE_VTK_LIBS "Enables using install VTK libraries [NOT RECOMMENDED]" OFF)

find_package(MessagePasser REQUIRED)
find_package(tecio QUIET)
find_package(Threads REQUIRED)
find_package(parfait REQUIRED)
find_package(tracer REQUIRED)
find_package(t-infinity REQUIRED)

find_package(ParMETIS QUIET)
if(${ParMETIS_FOUND})
    message("ParMETIS found! Libs: ${PARMETIS_LIBRARIES}  Path: ${PARMETIS_INCLUDE_DIRS}")
else()
    message("Could not find ParMETIS.  Continuing without ParMETIS support")
endif()

if(${PARFAIT_ENABLE_VTK_LIBS})
    find_package(VTK QUIET)
    if(${VTK_FOUND})
        message("VTK found! Libs: ${VTK_LIBRARIES}  Path: ${VTK_INCLUDE_DIRS}")
    else()
        message("Could not find VTK.  Continuing without directly linking VTK libraries")
        message("Binary VTK files can still be written.")
    endif()
endif()

find_package(Zoltan QUIET)
if(${ZOLTAN_FOUND})
    message("Zoltan found!  Libs: ${ZOLTAN_LIBRARIES}     Path: ${ZOLTAN_INCLUDE_DIRS}")
else()
    message("Could not find Zoltan.  Continuing without Zoltan support")
endif()

if(${PARFAIT_ENABLE_CGNS})
    find_package(CGNS QUIET)
    if(${CGNS_FOUND})
        message("CGNS found! Libs: ${CGNS_LIBRARIES}  Path: ${CGNS_INCLUDE_DIRS}")
    else()
        message("Could not find CGNS.  Continuing without CGNS support")
    endif()
endif()

add_subdirectory(shared)
add_subdirectory(utilities)
add_subdirectory(SerialPreProcessor)
add_subdirectory(CellCenteredReProcessor)
add_subdirectory(NodeCenteredPreProcessor)
add_subdirectory(DistanceCalculator)
add_subdirectory(Interpolator)
add_subdirectory(Viz)
if(RING_BUILD_TESTING)
    add_subdirectory(test)
endif()

install(FILES plugin-parfaitConfig.cmake
        DESTINATION cmake)
